plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id "com.matthewprenger.cursegradle"
}

loom {
    accessWidenerPath = file("../common/src/main/resources/moreplanets.accesswidener")

    launches {
        client {
            arg "--username", "${username}", "--uuid", "${uuid}"
        }
    }

    mixin {
        defaultRefmapName = "mixins.moreplanets_fabric.refmap.json"
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources/", "../common/src/main/resources/"]
        }
    }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
    flatDir {
        dirs "libs"
    }
    maven {
        url "https://jitpack.io/"
    }
    maven {
        name "vram"
        url "https://maven.vram.io/"
    }
    maven {
        name "ModMenu Maven"
        url "https://maven.terraformersmc.com/releases/"
    }
    maven {
        name "Canvas Renderer"
        url "https://maven.dblsaiko.net/"
    }
    maven {
        name "Cotton"
        url "https://server.bbkr.space/artifactory/libs-release/"
        allowInsecureProtocol true
    }
    maven {
        name "CurseForge"
        url "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    modApi "com.terraformersmc:modmenu:${rootProject.modmenu_version}"
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}"

    modRuntimeOnly("io.vram:special-circumstances:1.9.5")
    modRuntimeOnly("grondag:canvas-mc117-1.17:${project.canvas_version}") {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "me.shedaniel.cloth"
        exclude group: "io.github.prospector"
    }

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    String lib = ":stevekung-lib-fabric"

    if (!file("libs/stevekung-lib-fabric.jar").exists()) {
        lib = "curse.maven:stevekungs-lib-296019:${rootProject.stevekung_lib_fabric}"
        println("Use CurseForge artifact")
    } else {
        println("Use existing artifact")
    }
    modImplementation(lib)
    include lib
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

String fileName = "${rootProject.archives_base_name}-mc${rootProject.mc_version}"

jar {
    classifier "dev"
    version "v${project.version}"
    baseName fileName
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
    version "v${project.version}"
    baseName fileName
    exclude "**/forge/**/*.*"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
    classifier "source"
    version "v${project.version}"
    baseName fileName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "fabric"
    version "v${project.version}"
    baseName fileName
}

artifacts {
    archives sourcesJar
    archives shadowJar
}

curseforge {
    if (project.hasProperty("upload_api_key")) {
        apiKey = project.upload_api_key
        project {
            id = "397441"
            changelog = file("../CHANGE_LOG.md")
            changelogType = "markdown"
            releaseType = "beta"
            addGameVersion "Fabric"
            addGameVersion "Java 16"
            addGameVersion rootProject.mc_version

            mainArtifact(remapJar.archiveFile) {
                displayName = "[Fabric] " + fileName + "-v${project.version}"
            }
            relations {
                requiredDependency "architectury-fabric"
                requiredDependency "fabric-api"
                embeddedLibrary "stevekungs-lib"
                embeddedLibrary "auto-config-updated-api"
                embeddedLibrary "cloth-config"
                optionalDependency "modmenu"
                optionalDependency "indicatia"
            }
            afterEvaluate {
                uploadTask.dependsOn(remapJar)
            }
            addArtifact sourcesJar
            addArtifact shadowJar
        }
        options {
            forgeGradleIntegration = false
        }
    }
}

afterEvaluate {
    tasks.curseforge397441.dependsOn remapJar
}